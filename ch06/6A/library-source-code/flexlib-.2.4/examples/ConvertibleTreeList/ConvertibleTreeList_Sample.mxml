<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (c) 2007 FlexLib Contributors.  See:
    http://code.google.com/p/flexlib/wiki/ProjectContributors

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:flexlib="http://code.google.com/p/flexlib/" 
	creationComplete="initDP();">

	<mx:Style>
		TitleWindow.close {
			closeButtonUpSkin:Embed('icons/closeNav.png');
			closeButtonDownSkin:Embed('icons/closeNav.png');
			closeButtonOverSkin:Embed('icons/closeNav.png');
			closeButtonDisabledSkin:Embed('icons/closeNav.png');
		}
		
		TitleWindow.open {
			closeButtonUpSkin:Embed('icons/openNav.png');
			closeButtonDownSkin:Embed('icons/openNav.png');
			closeButtonOverSkin:Embed('icons/openNav.png');
			closeButtonDisabledSkin:Embed('icons/openNav.png');
		}
	</mx:Style>
	
	<mx:Script>
		<![CDATA[
			[Embed(source="icons/ScrollableMenu.png")] 
            public var menu_icon:Class; 
            [Embed(source="icons/HSlider.png")]
            public var slider_icon:Class; 
            [Embed(source="icons/SuperTabNavigator.png")]
            public var tab_icon:Class; 
			[Embed(source="icons/HAccordion.png")]
            public var accordion_icon:Class; 
            [Embed(source="icons/DragScrollingCanvas.png")]
            public var drag_icon:Class;
            [Embed(source="icons/VerticalMenuBar.png")]
            public var vmenu_icon:Class;
            [Embed(source="icons/UtilIcon.png")]
            public var util_icon:Class;
            [Embed(source="icons/ConvertibleTreeList.png")]
            public var ctree_icon:Class;
            
            [Bindable]
            [Embed(source="icons/full_list.png")]
            public var icon1:Class;
            [Bindable]
            [Embed(source="icons/icon_list.png")]
            public var icon2:Class;
            [Bindable]
            [Embed(source="icons/text_list.png")]
            public var icon3:Class;
            [Bindable]
            [Embed(source="icons/tree.png")]
            public var icon4:Class;
            
           
            private function initDP():void {
            	var xml:XML = 
            		<node>
				    	<group label="Controls">
				        	<example label="Draggable Slider" showInList="true" icon="slider_icon" number="6" />
				            <example label="Scrollable Menu Controls" showInList="true" icon="menu_icon" number="5" />
				            <example label="Vertical MenuBar" showInList="true" icon="vmenu_icon" number="8" />
				        </group>
				        <group label="Containers">
				        	<example label="Alternative Dragging Canvases" showInList="true" icon="drag_icon" number="1" />
				        	<example label="Horizontal Accordion" showInList="true" icon="accordion_icon" number="3" />
				        	<example label="SuperTabNavigator" showInList="true" icon="tab_icon" number="7" />
				        </group>
				        <group label="Utility">
				        	<example label="Hit Tester" showInList="true" icon="util_icon" number="4" />
				        </group>
			        </node>; 
				
				ctree.dataProvider = xml;
				ctree2.dataProvider = xml;
				
            }

			private function resizeCTree(event:Event):void {
				if(ctree2.width == ctree2.minWidth) {
					controlsWindow.title = "Controls";
					controlsWindow.styleName = "close";
					
					ctree2.width = ctree2.maxWidth;
					ctree2.mode = ConvertibleTreeList.TREE;
				}
				else {
					controlsWindow.title = "";
					controlsWindow.styleName = "open";
					
					ctree2.width = ctree2.minWidth;
					ctree2.mode = ConvertibleTreeList.ICON_LIST;
				}
			}
		]]>
	</mx:Script>
	
	
					
	<mx:VBox width="100%">
		<mx:Panel layout="vertical" title="Example 1">
			<mx:Canvas borderStyle="solid" width="100%" >
				<flexlib:ConvertibleTreeList id="ctree"
					width="100%" height="150" 
					showRoot="false" 
					iconField="@icon" 
					labelField="@label"
					 listField="showInList"
					/>
			</mx:Canvas>
			
			<mx:ControlBar>
				<mx:ToggleButtonBar itemClick="ctree.mode = event.item.mode" >
					<mx:dataProvider>
		                <mx:Array>
		                  <mx:Object icon="{icon4}" mode="tree" />
		                  <mx:Object icon="{icon1}" mode="list" />
		                  <mx:Object icon="{icon2}" mode="icon" />
		                  <mx:Object icon="{icon3}" mode="text"/>
		                </mx:Array>
		            </mx:dataProvider>
				</mx:ToggleButtonBar>
			</mx:ControlBar>
		</mx:Panel>
		
		<mx:TitleWindow id="controlsWindow"
			styleName="close" 
			layout="vertical"   title="Controls" 
			paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0"
			showCloseButton="true" close="resizeCTree(event)"
			>
			
			<flexlib:ConvertibleTreeList id="ctree2"  resizeEffect="Resize"
				minWidth="32" maxWidth="240"
				width="240"	height="160"  
				showRoot="false" 
				iconField="@icon" 
				labelField="@label"
				/>
					
		</mx:TitleWindow>
	</mx:VBox>
	
</mx:Application>
