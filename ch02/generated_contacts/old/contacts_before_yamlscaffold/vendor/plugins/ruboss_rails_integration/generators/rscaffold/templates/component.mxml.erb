<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" label="<%= class_name %>"
  xmlns:rcomponents="org.ruboss.components.*">
<mx:Script><![CDATA[
  import org.ruboss.Ruboss;
  import org.ruboss.utils.RubossUtils;
  import <%= base_package %>.models.<%= class_name %>;
<% for model in belongs_tos -%>
  import <%= base_package %>.models.<%= model.camelcase %>;
<% end -%>

  [Bindable]
  public var edited<%= class_name %>:<%= class_name %> = new <%= class_name %>();
  
  public function create<%= class_name %>():void {
    var <%= class_name.downcase_first_letter %>:<%= class_name %> = new <%= class_name %>();
<% for attribute in attributes -%>
<% if attribute.type == :boolean -%>
    <%= class_name.downcase_first_letter %>.<%= attribute.flex_name %> = <%= attribute.flex_name %>CheckBox.selected;
<% elsif attribute.type == :string -%>
    <%= class_name.downcase_first_letter %>.<%= attribute.flex_name %> = <%= attribute.flex_name %>TextInput.text;
<% elsif attribute.type == :text -%>
    <%= class_name.downcase_first_letter %>.<%= attribute.flex_name %> = <%= attribute.flex_name %>TextArea.text;
<% elsif attribute.type == :datetime -%>
    <%= class_name.downcase_first_letter %>.<%= attribute.flex_name %> = <%= attribute.flex_name %>DateTimeTextInput.date;
<% elsif attribute.type == :date -%>
    <%= class_name.downcase_first_letter %>.<%= attribute.flex_name %> = <%= attribute.flex_name %>DateChooser.selectedDate;
<% else -%>
    <%= class_name.downcase_first_letter %>.<%= attribute.flex_name %> = <%= attribute.flex_type %>(<%= attribute.flex_name %>TextInput.text);
<% end -%>
<% end -%>

<% for model in belongs_tos -%>
    <%= class_name.downcase_first_letter %>.<%= model.camelcase(:lower) %> = <%= model.camelcase %>(<%= model.camelcase(:lower) %>ComboBox.selectedItem);
<% end -%>
    Ruboss.models.create(<%= class_name.downcase_first_letter %>, on<%= class_name %>Create);
  }

  public function update<%= class_name %>():void {
<% for attribute in attributes -%>
<% if attribute.type == :boolean -%>
    edited<%= class_name %>.<%= attribute.flex_name %> = <%= attribute.flex_name %>CheckBox.selected;
<% elsif attribute.type == :string -%>
    edited<%= class_name %>.<%= attribute.flex_name %> = <%= attribute.flex_name %>TextInput.text;
<% elsif attribute.type == :text -%>
    edited<%= class_name %>.<%= attribute.flex_name %> = <%= attribute.flex_name %>TextArea.text;
<% elsif attribute.type == :datetime -%>
    edited<%= class_name %>.<%= attribute.flex_name %> = <%= attribute.flex_name %>DateTimeTextInput.date;
<% elsif attribute.type == :date -%>
    edited<%= class_name %>.<%= attribute.flex_name %> = <%= attribute.flex_name %>DateChooser.selectedDate;
<% else -%>
    edited<%= class_name %>.<%= attribute.flex_name %> = <%= attribute.flex_type %>(<%= attribute.flex_name %>TextInput.text);
<% end -%>
<% end -%>

<% for model in belongs_tos -%>
    edited<%= class_name %>.<%= model.camelcase(:lower) %> = <%= model.camelcase %>(<%= model.camelcase(:lower) %>ComboBox.selectedItem);
<% end -%>
    Ruboss.models.update(edited<%= class_name %>, on<%= class_name %>Update);
  }

  public function destroy<%= class_name %>():void {
    Ruboss.models.destroy(edited<%= class_name %>, on<%= class_name %>Destroy);
  }
  
  private function on<%= class_name %>Select():void {
    edited<%= class_name %> = RubossUtils.clone(<%= class_name.downcase_first_letter.pluralize %>DataGrid.selectedItem) as <%= class_name %>;
  }
  
  private function on<%= class_name %>Create(<%= class_name.downcase_first_letter %>:<%= class_name %>):void {
    edited<%= class_name %> = new <%= class_name %>;
  }
  
  private function on<%= class_name %>Update(<%= class_name.downcase_first_letter %>:<%= class_name %>):void {
    <%= class_name.downcase_first_letter.pluralize %>DataGrid.selectedItem = <%= class_name.downcase_first_letter %>;
    edited<%= class_name %> = RubossUtils.clone(<%= class_name.downcase_first_letter %>) as <%= class_name %>;
  }
  
  private function on<%= class_name %>Destroy(<%= class_name.downcase_first_letter %>:<%= class_name %>):void {
    on<%= class_name %>Create(<%= class_name.downcase_first_letter %>);
  }
]]></mx:Script>
  <mx:Panel id="<%= class_name.downcase_first_letter.pluralize %>Panel" title="<%= class_name.pluralize %> List"
    width="{width}" height="300">
    <mx:DataGrid id="<%= class_name.downcase_first_letter.pluralize %>DataGrid"
      height="100%"
      horizontalScrollPolicy="auto"
      dataProvider="{Ruboss.models.index(<%= class_name %>)}"
      change="on<%= class_name %>Select()">
      <mx:columns>
<% for attribute in attributes -%>
<% if attribute.type == :boolean -%>
        <mx:DataGridColumn editable="false" width="80" minWidth="80"
          headerText="<%= attribute.flex_name.capitalize_without_downcasing %>"
          dataField="<%= attribute.flex_name %>">
          <mx:itemRenderer>
            <mx:Component>
              <mx:HBox horizontalAlign="center">
                <mx:Script><![CDATA[
                  import <%= base_package %>.models.<%= class_name %>;
                  import org.ruboss.utils.RubossUtils;
                  
                  private function update<%= attribute.flex_name.capitalize_without_downcasing %>():void {
                    var <%= class_name.downcase_first_letter %>:<%= class_name %> = RubossUtils.clone(data) as <%= class_name %>;
                    <%= class_name.downcase_first_letter %>.<%= attribute.flex_name %> = !<%= class_name.downcase_first_letter %>.<%= attribute.flex_name %>;
                    outerDocument.edited<%= class_name %> = <%= class_name.downcase_first_letter %>;
                    outerDocument.update<%= class_name %>();
                  }
                ]]></mx:Script>
                <mx:CheckBox selected="{data.<%= attribute.flex_name %>}"
                  click="update<%= attribute.flex_name.capitalize_without_downcasing %>()"/>
              </mx:HBox>
            </mx:Component>
          </mx:itemRenderer>
        </mx:DataGridColumn>
<% else -%>
        <mx:DataGridColumn dataField="<%= attribute.flex_name %>" headerText="<%= attribute.flex_name.capitalize_without_downcasing %>"
          width="150" minWidth="100"/>
<% end -%>
<% end -%>
<% for model in belongs_tos -%>
        <mx:DataGridColumn editable="false" sortable="false"
          width="150" dataField="<%= model.camelcase(:lower) %>"
          headerText="<%= model.camelcase %>">
        </mx:DataGridColumn>
<% end -%>
        <mx:DataGridColumn headerText="" width="70" minWidth="70"
          editable="false" dataField="name">
          <mx:itemRenderer>
            <mx:Component>
              <mx:HBox horizontalAlign="center" paddingLeft="2"
                paddingRight="2">
                <mx:Button label="delete" width="100%"
                  click="outerDocument.destroy<%= class_name %>()">
                </mx:Button>
              </mx:HBox>
            </mx:Component>
          </mx:itemRenderer>
        </mx:DataGridColumn>
      </mx:columns>
    </mx:DataGrid>
  </mx:Panel>
  <mx:Panel title="<%= class_name %> Editor" width="100%" height="{height - 320}" verticalScrollPolicy="auto">
    <mx:Form width="100%" height="100%">
<% for attribute in attributes -%>
      <mx:FormItem label="<%= attribute.flex_name.capitalize_without_downcasing %>" width="100%">
<% if attribute.type == :boolean -%>
        <mx:CheckBox id="<%= attribute.flex_name %>CheckBox"
          selected="{edited<%= class_name %>.<%= attribute.flex_name %>}"/>
<% elsif attribute.type == :string -%>
        <mx:TextInput id="<%= attribute.flex_name %>TextInput" width="100%"
          text="{edited<%= class_name %>.<%= attribute.flex_name %>}"/>
<% elsif attribute.type == :text -%>
        <mx:TextArea id="<%= attribute.flex_name %>TextArea" width="100%" height="200"
          text="{edited<%= class_name %>.<%= attribute.flex_name %>}"/>
<% elsif attribute.type == :datetime -%>
        <rcomponents:DateTimeTextInput id="<%= attribute.flex_name %>DateTimeTextInput" width="100%"
          date="{edited<%= class_name %>.<%= attribute.flex_name %>}"/>
<% elsif attribute.type == :date -%>
        <mx:DateChooser id="<%= attribute.flex_name %>DateChooser" width="100%"
          selectedDate="{edited<%= class_name %>.<%= attribute.flex_name %>}"/>
<% else -%>
        <mx:TextInput id="<%= attribute.flex_name %>TextInput" width="100%"
          text="{edited<%= class_name %>.<%= attribute.flex_name %>}"/>
<% end -%>
      </mx:FormItem>
<% end -%>
<% for model in belongs_tos -%>
      <mx:FormItem label="<%= model.camelcase %>" width="100%">
        <mx:ComboBox id="<%= model.camelcase(:lower) %>ComboBox"
          width="150" labelField="{<%= model.camelcase %>.LABEL}"
          dataProvider="{Ruboss.models.index(<%= model.camelcase %>)}"
          selectedItem="{edited<%= class_name %>.<%= model.camelcase(:lower) %>}" />
      </mx:FormItem>
<% end -%>
    </mx:Form>
    <mx:ControlBar width="100%" height="100%">
      <mx:Button label="Create <%= class_name %>" width="34%" height="30"
        click="create<%= class_name %>()"/>
      <mx:Button label="Update <%= class_name %>" width="33%" height="30"
        enabled="{<%= class_name.downcase_first_letter.pluralize %>DataGrid.selectedItem != null}"
        click="update<%= class_name %>()"/>
      <mx:Button label="Delete <%= class_name %>" width="33%" height="30"
        enabled="{<%= class_name.downcase_first_letter.pluralize %>DataGrid.selectedItem != null}"
        click="destroy<%= class_name %>()"/>
    </mx:ControlBar>
  </mx:Panel>
</mx:VBox>