<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
  width="100%" height="100%" label="Geocode">
<mx:Script><![CDATA[
  import mx.events.ValidationResultEvent;
  import com.socialstalkr.control.EventNames;
  import com.socialstalkr.util.CairngormUtils;
  import com.socialstalkr.model.SocialStalkrModelLocator;
  
  [Bindable]
  private var _model:SocialStalkrModelLocator =
    SocialStalkrModelLocator.instance;

  private var _country:String;

  private var _state:String;
  
  [Bindable]
  private var _international:Boolean;
  
  private function validateAndFormatZipCode():void {
    var unformattedText:String = zipTI.text.toUpperCase();
    unformattedText = unformattedText.replace(/\W/g, "");
    var result:ValidationResultEvent =
      zipCodeValidator.validate(unformattedText);
    if (result.type == ValidationResultEvent.VALID) {
      if (countryCB.selectedItem.data == "USA") {
        zipTI.text = zipCodeFormatter.format(unformattedText);
      } else {
        zipTI.text = postalCodeFormatter.format(unformattedText);
      } 
    }
  }
  
  private static const COUNTRIES:Array =
    [{label:"USA", data: "USA"},
     {label:"Canada", data:"Canada"},
     {label:"Other...", data:""}];
    
  private static const STATES:Array =
    [{label:"California", data:"CA"},
     {label:"Oregon", data:"OR"},
     {label:"Washington", data:"WA"}];

  private static const PROVINCES:Array =
    [{label:"British Columbia", data:"BC"},
     {label:"Alberta", data:"AB"},
     {label:"Saskatchewan", data:"SK"}];
     
  private function getStates(country:String):Array {
    if (country == "USA") {
      return STATES;
    } else if (country == "Canada") {
      return PROVINCES;
    } else {
      return [];
    }
  }
  
  private function updateSelectedCountry():void {
    _country = countryCB.selectedItem.data as String;
    _international = _country == "";
    if (_international) {
      _state = "";
      //zipCodeValidator.
    } else {
      _state = stateCB.selectedItem.data as String;//TODO - necessary?
    }
  }
  
  private function doSearch():void {
    addressValidator.validate();
    var locStr:String = "@{" +
      addressOneTI.text + " " + addressTwoTI.text + " " +
      cityTI.text + " " + _state + " " + _country + "}";
    _model.selectedTweet.text = locStr;
    CairngormUtils.dispatchEvent(EventNames.LOCATE_TWEET,
      _model.selectedTweet);
  }
]]></mx:Script>
  <mx:ZipCodeFormatter id="zipCodeFormatter"
    formatString="#####-####"/>
  <mx:ZipCodeFormatter id="postalCodeFormatter"
    formatString="### ###"/>
  <mx:ZipCodeValidator id="zipCodeValidator"
    allowedFormatChars=" -"
    domain="US or Canada"
    source="{zipTI}" property="text"
    enabled="{!_international}"/>
  <mx:StringValidator id="addressValidator"
    source="{addressOneTI}" property="text" required="true"/>
  <mx:StringValidator id="cityValidator"
    source="{cityTI}" property="text" required="true"/>
    
  <mx:Form width="100%">
    <mx:FormHeading label="Enter a Location"/>
    <mx:FormItem label="Street Address" required="true"
      width="100%">
      <mx:TextInput id="addressOneTI" width="100%"/>
      <mx:TextInput id="addressTwoTI" width="100%"/>
    </mx:FormItem>
    <mx:FormItem label="City" required="true" width="100%">
      <mx:TextInput id="cityTI" width="100%"/>
    </mx:FormItem>
    <mx:FormItem label="Country" direction="vertical"
      width="100%">
      <mx:ComboBox id="countryCB" dataProvider="{COUNTRIES}"
        change="updateSelectedCountry()"/>
      <mx:TextInput id="countryTI" enabled="{_international}"
        width="100%"/>
    </mx:FormItem>
    <mx:FormItem label="State / Province" width="100%">
      <mx:ComboBox id="stateCB" width="100%"
dataProvider="{getStates(countryCB.selectedItem.data as String)}"
        enabled="{stateCB.dataProvider.length > 0}"
        change="_state = stateCB.selectedItem.data as String;"/>
    </mx:FormItem>
    <mx:FormItem label="Zip / Postal Code" width="100%">
      <mx:TextInput id="zipTI" width="100%"
        enabled="{stateCB.dataProvider.length > 0}"
        focusOut="validateAndFormatZipCode()"/>
    </mx:FormItem>
    <mx:FormItem>
      <mx:Button label="Search" click="doSearch()"/>
    </mx:FormItem>
  </mx:Form>
</mx:VBox>